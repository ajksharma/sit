From cd731a8af5ebcff737381068b6ceda6c9961738e Mon Sep 17 00:00:00 2001
From: Yurii Rashkovskii <me@yrashk.com>
Date: Thu, 12 Apr 2018 13:41:36 -0700
Subject: [PATCH] Problem: executing non-existent external CLI commands on
 Windows

On Unix, if a command is not found, `sit` will fall back to suggestion
or error. However, since on Windows it doesn't actually start the script
itself but rather `cmd`, it fails to recognize that the error incurred
by `cmd` is just the inability to find the script.

Solution: use `which` crate to find the name of the executable
before trying to spawn it.

This resolves the problem and unifies the spawning across the platforms.
---
 Cargo.lock      | 42 ++++++++++++++++++++++++++++++++++++++++++
 sit/Cargo.toml  |  1 +
 sit/src/main.rs | 49 +++++++++++++++++++++++++++++--------------------
 3 files changed, 72 insertions(+), 20 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index 5c256f4..6ff1eda 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -394,6 +394,25 @@ dependencies = [
  "backtrace 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
+[[package]]
+name = "failure"
+version = "0.1.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+dependencies = [
+ "backtrace 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)",
+ "failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)",
+]
+
+[[package]]
+name = "failure_derive"
+version = "0.1.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+dependencies = [
+ "quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)",
+ "syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)",
+ "synstructure 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)",
+]
+
 [[package]]
 name = "fake-simd"
 version = "0.1.2"
@@ -1004,6 +1023,7 @@ dependencies = [
  "tempdir 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
  "tempfile 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "tini 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "which 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "xdg 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "yaml-rust 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
@@ -1102,6 +1122,15 @@ dependencies = [
  "unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
+[[package]]
+name = "synstructure"
+version = "0.6.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+dependencies = [
+ "quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)",
+ "syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)",
+]
+
 [[package]]
 name = "tempdir"
 version = "0.3.6"
@@ -1326,6 +1355,15 @@ name = "version_check"
 version = "0.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 
+[[package]]
+name = "which"
+version = "2.0.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+dependencies = [
+ "failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "libc 0.2.36 (registry+https://github.com/rust-lang/crates.io-index)",
+]
+
 [[package]]
 name = "winapi"
 version = "0.2.8"
@@ -1425,6 +1463,8 @@ dependencies = [
 "checksum encoding_index_tests 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)" = "a246d82be1c9d791c5dfde9a2bd045fc3cbba3fa2b11ad558f27d01712f00569"
 "checksum enum_primitive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = "be4551092f4d519593039259a9ed8daedf0da12e5109c5280338073eaeb81180"
 "checksum error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)" = "ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3"
+"checksum failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = "934799b6c1de475a012a02dab0ace1ace43789ee4b99bcfbf1a2e3e8ced5de82"
+"checksum failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = "c7cdda555bb90c9bb67a3b670a0f42de8e73f5981524123ad8578aafec8ddb8b"
 "checksum fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)" = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed"
 "checksum filetime 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)" = "714653f3e34871534de23771ac7b26e999651a0a228f47beb324dfdf1dd4b10f"
 "checksum fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = "5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674"
@@ -1505,6 +1545,7 @@ dependencies = [
 "checksum syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)" = "d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad"
 "checksum syn 0.12.14 (registry+https://github.com/rust-lang/crates.io-index)" = "8c5bc2d6ff27891209efa5f63e9de78648d7801f085e4653701a692ce938d6fd"
 "checksum synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)" = "a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6"
+"checksum synstructure 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)" = "3a761d12e6d8dcb4dcf952a7a89b475e3a9d69e4a69307e01a470977642914bd"
 "checksum tempdir 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)" = "f73eebdb68c14bcb24aef74ea96079830e7fa7b31a6106e42ea7ee887c1e134e"
 "checksum tempfile 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = "11ce2fe9db64b842314052e2421ac61a73ce41b898dc8e3750398b219c5fc1e0"
 "checksum term 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)" = "f2077e54d38055cf1ca0fd7933a2e00cd3ec8f6fed352b2a377f06dcdaaf3281"
@@ -1534,6 +1575,7 @@ dependencies = [
 "checksum uuid 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)" = "bcc7e3b898aa6f6c08e5295b6c89258d1331e9ac578cc992fb818759951bdc22"
 "checksum vec_map 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)" = "887b5b631c2ad01628bbbaa7dd4c869f80d3186688f8d0b6f58774fbe324988c"
 "checksum version_check 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)" = "6b772017e347561807c1aa192438c5fd74242a670a6cffacc40f2defd1dc069d"
+"checksum which 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)" = "49c4f580e93079b70ac522e7bdebbe1568c8afa7d8d05ee534ee737ca37d2f51"
 "checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)" = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"
 "checksum winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)" = "04e3bd221fcbe8a271359c04f21a76db7d0c6028862d1bb5512d85e1e2eb5bb3"
 "checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"
diff --git a/sit/Cargo.toml b/sit/Cargo.toml
index a8c2ff1..51f6965 100644
--- a/sit/Cargo.toml
+++ b/sit/Cargo.toml
@@ -23,6 +23,7 @@ glob = "0.2"
 rayon = "1.0"
 question = "0.2"
 dunce = "0.1"
+which = "2.0"
 sit-core = { path = "../sit-core", version = "0.3.0" }
 
 [features]
diff --git a/sit/src/main.rs b/sit/src/main.rs
index 0e18ed3..8dbe211 100644
--- a/sit/src/main.rs
+++ b/sit/src/main.rs
@@ -46,6 +46,8 @@ extern crate question;
 
 extern crate dunce;
 
+extern crate which;
+
 use std::collections::HashMap;
 fn get_named_expression<S: AsRef<str>>(name: S, repo: &sit_core::Repository,
                                        repo_path: S, exprs: &HashMap<String, String>) -> Option<String> {
@@ -761,38 +763,45 @@ fn main_with_result(allow_external_subcommands: bool) -> i32 {
             app.print_help().expect("can't print help");
             return 1;
         }
-        #[cfg(not(windows))]
-        let mut command = ::std::process::Command::new(format!("sit-{}", subcommand));
-        #[cfg(windows)]
-        let mut command = ::std::process::Command::new("cmd");
-        #[cfg(windows)]
-        command.args(&["/c", &format!("sit-{}", subcommand)]);
+
+
         #[cfg(not(windows))]
         let path_sep = ":";
         #[cfg(windows)]
         let path_sep = ";";
+
         let mut path: String = repo.path().join("cli").to_str().unwrap().into();
         for module_name in repo.module_iter().expect("can't iterate over modules") {
             path += path_sep;
-            path += repo.modules_path().join(module_name).join("cli").to_str().unwrap();
+            path += repo.modules_path().join(module_name).join("cli").to_str().unwrap().into();
         }
+
         path += path_sep;
-        path += &env::var("PATH").unwrap_or("".into());
-        command.env("PATH",  path);
-        command.env("SIT_DIR", repo.path().to_str().unwrap());
-        command.env("SIT", env::current_exe().unwrap_or("sit".into()).to_str().unwrap());
-        if let Some(args) = args {
-            command.args(args.values_of_lossy("").unwrap_or(vec![]));
-        }
-        match command.spawn() {
+        path += &env::var("PATH").unwrap();
+
+        match which::which_in(format!("sit-{}", subcommand), Some(path), &cwd) {
+            Ok(path) => {
+                let mut command = ::std::process::Command::new(path);
+                command.env("SIT_DIR", repo.path().to_str().unwrap());
+                command.env("SIT", env::current_exe().unwrap_or("sit".into()).to_str().unwrap());
+                if let Some(args) = args {
+                    command.args(args.values_of_lossy("").unwrap_or(vec![]));
+                }
+                match command.spawn() {
+                    Err(_) => {
+                        return main_with_result(false);
+                    },
+                    Ok(mut process) => {
+                        let result = process.wait().unwrap();
+                        return result.code().unwrap();
+                    },
+                }
+            },
             Err(_) => {
                 return main_with_result(false);
             },
-            Ok(mut process) => {
-                let result = process.wait().unwrap();
-                return result.code().unwrap();
-            },
-        };
+        }
+
     }
 
 }
-- 
2.16.2

